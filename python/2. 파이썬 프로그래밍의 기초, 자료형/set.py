#집합 자료형
#집합 자료형은 set 키워드를 이용해 만들 수 있음.
#집합 자료형은 중복을 허용하지 않는다.
#집합 자료형은 순서가 없다.->순서가 없기 때문에 인덱싱을 지원하지 않음.
#집합 자료형을 활용하는 방법 : 교집합, 합집합, 차집합 구하기

s1 = set([1, 2, 3])
print(s1)   #출력 결과 : {1, 2, 3}

s2 = set("Hello")
print(s2)   #집합 자료형은 중복을 허용하지 않고, 순서가 없다.->출력 결과 : {'l', 'e', 'o', 'H'}

s1 = set([1, 2, 3, 4, 5, 6])
s2 = set([4, 5, 6, 7, 8, 9])
#교집합 구하기
print(s1&s2)    #출력 결과 : {4, 5, 6}
print(s1.intersection(s2))  #출력 결과 : {4, 5, 6}

#합집합 구하기
print(s1|s2)    #출력 결과 : {1, 2, 3, 4, 5, 6, 7, 8, 9}
print(s1.union(s2)) #출력 결과 : {1, 2, 3, 4, 5, 6, 7, 8, 9}

#차집합 구하기
print(s1-s2)    #출력 결과 : {1, 2, 3}
print(s1.difference(s2))    #출력 결과 : {1, 2, 3}
print(s2-s1)    #출력 결과 : {8, 9, 7}
print(s2.difference(s1))    #출력 결과 : {8, 9, 7}

#값 1개 추가하기 : add()
s1 = set([1, 2, 3])
s1.add(4)
print(s1)   #출력 결과 : {1, 2, 3, 4}

#값 여러개 추가하기 : update()
s1 = set([1, 2, 3])
s1.update([4, 5, 6])
print(s1)   #출력 결과 : {1, 2, 3, 4, 5, 6}

#특정값 제거하기 : remove()
s1 = set([1, 2, 3])
s1.remove(2)
print(s1)   #출력 결과 : {1, 3}