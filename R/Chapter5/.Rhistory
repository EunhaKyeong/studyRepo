CSV <- read.csv("충청남도_예산군_농어촌체험마을_20180917")
CSV <- read.csv("충청남도_예산군_농어촌체험마을_20180917", stringsAsFactors = F)
CSV <- read.csv("충청남도_예산군_농어촌체험마을_20180917", stringsAsFactors = F)
CSV
cc <- read.csv("충청남도_예산군_농어촌체험마을_20180917.csv", stringsAsFactor = F)
head(cc)
head(cc, 3)
tail(cc)
tail(cc, 2)
View(cc)
dim(cc)
str(cc)
summary(cc)
library(ggplot2)
mpg <- as.data.frame(ggplot2::mpg)
mpg
head(mpg)
head(mpg, 3)
tail(mpg)
tail(mpg, 3)
View(mpg)
dim(mpg)
str(mpg)
summary(mpg)
install.packages("dplyr)")
df_raw <- data.frame(var1 = c(1, 2, 1),
var2 = c(2, 3, 2))
df_raw
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
library(dplyr)
df_new <- rename(df_new, v2 = var2)
install.packages("dplyr")
library(dplyr)
library(dplyr)
df_new <- df_raw
df_raw = data.frame(var1 = c(1, 2, 1),
var2 = c(2, 3, 2))
df_new <- rename(df_new, vr = var2)
df_new <- rename(df_new, v2 = var2)
df_new <- rename(df_new, v2 = vr)
df_new <- rename(df_new, var2 = v2)
df_new <- rename(df_new, v2 = var2)
df_new
df_raw
df_new
# mpg 데이터를 이용하여 아래 문제를 해결해보시오.
# 1) ggplot2() 패키지의 mpg 데이터를 사용할 수 있도록 불러온 후 복사본을 만드세요.
mpg_copy <- as.data.frame(ggplot2::mpg)
mpg_copy
# 2) 복사본 데이터를 이용해 cty는 city로, hwy는 highway로 수정하세요.
mpg_copy <- rename(mpg_copy, city = cty, highway = hwy)
mpc_copy
mpg_copy
df <- data.frame(var1 = c(4, 3, 8),
var2 = c(2, 6, 1))
df
df$var_sum <- df$var1 + df$var2
df
df$var_mean <- df$var_sum / 2
df
#mpg 통합 연비 변수 만들기
#mpg 데이터의 cty, hwy 변수를 이용하여 도로 유형을 통틀어 가장 높은 연비를 가진 자동차 모델 구하기
mpg$total <- (mpg$cty + mpg$hwy) / 2
mpg
mean(mpg@total)
mean(mpg$total)
#1. 기준값 정하기
summary(mpg$otal)
#1. 기준값 정하기
summary(mpg$total)
#1. 기준값 정하기
summary(mpg$total)
hist(mpg$total)
hist(mpg$total) x축->total값, y축->빈도수
#이를 통해 기준값을 20으로 정하는 것이 가장 적합할 것으로 판단됨. -> 통합연비가 20을 넘기면 합격, 아니면 불합.
ifelse(mpg$total >= 20, "pass", "fail") #ifelse(조건, 조건에 맞을시 실행, 조건에 맞지 않을 시 실행)
head(mpg, 20)
hist(mpg$total) x축->total값, y축->빈도수
#이를 통해 기준값을 20으로 정하는 것이 가장 적합할 것으로 판단됨. -> 통합연비가 20을 넘기면 합격, 아니면 불합.
mpg$test <- ifelse(mpg$total >= 20, "pass", "fail") #ifelse(조건, 조건에 맞을시 실행, 조건에 맞지 않을 시 실행)
head(mpg, 20)
table(mpg$test)
qplot(mpg$test)
library(ggplot2)
qplot(mpg$test)
#중첩 조건문 활용하기 -> 30이상 : A, 20~29 : B, 20미만 : C
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total) >= 20, "B", else "C")
ifelse(mpg$total >= 20, "B", else "C")
ifelse(mpg$total >= 20, "B", "C")
table(mpg$grade)
qplot(mpg$grade)
head(mpg$grade)
head(mpg)
#중첩 조건문 활용하기 -> 30이상 : A, 20~29 : B, 20미만 : C
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 20, "B", "C"))
head(mpg)
qplot(mpg$grade)
table(mpg$grade)
#문제1) ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요.
library(ggplot2)
midwest_copy <- as.data.frame(ggplot2::midwest)
midtest_copy
midwest_copy
View(midwest_copy)
summary(midwest_copy)
?midwest_copy
library(dplyr)
midwest <- rename(midwest, total = poptotal)
midwest <- rename(midwest, total = poptotal, asian = popasian)
midwest <- rename(midwest, total = poptotal, asian = popasian)
midwest <- rename(midwest, total = poptotal, asian = popasian)
midwest <- rename(midwest, total = poptotal, asian = popasian)
midwest <- rename(midwest, total = poptotal)
midwest <- rename(midwest, asian = popasian)
#문제3) total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
midwest$total_percent <- (midwest$asian / midwest$total) * 100
midwest$total_percent
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
midwest$asian_mean <- mean(midwest$asian)
mean(midwest$asian)
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
midwest
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
View(midwest)
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
total_asian_percent <- mean(midwest$total_percent)
total_asian_percent
local_percent <- ifelse(midwest$total_percent > total_asian_percent, "large", "small")
View(midwest)
midwest$local_percent <- ifelse(midwest$total_percent > total_asian_percent, "large", "small")
View(midwest)
#문제5)"large"와 "small"에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.
qplot(midest$locall_percent)
#문제5)"large"와 "small"에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.
qplot(midwest$locall_percent)
#문제5)"large"와 "small"에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.
qplot(midwest$local_percent)
head(cc) # head - 데이터 앞부분 확인하기, 앞에서부터 여섯 번째 행까지 출력
head(cc, 3) #숫자를 입력하면 앞에서부터 입력한 행까지의 데이터를 출력
tail(cc) #tail - 뒤에서부터 여섯 행을 출력
tail(cc) #뒤에서부터 입력한 행까지의 데이터를 출력
tail(cc, 3) #뒤에서부터 입력한 행까지의 데이터를 출력
View(cc) #View - 뷰어 창에서 데이터 확인하기 하나의 파일로 엑셀 형식으로 데이터를 보여줌.
dim(cc) #dim - 데이터가 몇 행, 몇 열로 구성되어 있는지 알려줌.
clear
dim(cc) #dim - 데이터가 몇 행, 몇 열로 구성되어 있는지 알려줌.
str(cc) #str - 변수의 자료형 을 알려줌.
summary(cc) #summary - 변수의 값을 요약하여 알려줌. 변수의 특성을 파악하는데 도움이 됨.
df_new
df_new <- rename(df_new, var2 = v2)
df_new
library(dplyr)
df_new <- rename(df_new, var2 = v2)
df_new
df_new <- rename(df_new, v2 = var2)
df_new
df <- data.frame(var1 = c(4, 3, 8),
var2 = c(2, 6, 1)) # 새로운 데이터 프레임 만들기
df
df$var_sum <- df$var1 + df$var2 # var1과 var2를 더한 var_sum 파생변수 생성
df
df$var_mean <- df$var_sum / 2 #전체 평균인 var_mean 파생변수 생성
df
mpg$total <- (mpg$cty + mpg$hwy) / 2 #자동차 통합 연비를 구하기 위해 total 파생변수 생성
mpg
mean(mpg$total)
hist(mpg$total) x축->total값, y축->빈도수
#이를 통해 기준값을 20으로 정하는 것이 가장 적합할 것으로 판단됨. -> 통합연비가 20을 넘기면 합격, 아니면 불합.
mpg$test <- ifelse(mpg$total >= mean(mpg$total), "pass", "fail") #ifelse(조건, 조건에 맞을시 실행, 조건에 맞지 않을 시 실행)
head(mpg, 20) #20행까지 데이터 확인
table(mpg$test) #합격 연비 빈도표 생성
library(ggplot2)
qplot(mpg$test) #연비 합격 빈도수 막대그래프 생성
#중첩 조건문 활용하기 -> 30이상 : A, 20~29 : B, 20미만 : C
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 20, "B", "C"))
head(mpg)
table(mpg$grade)
#중첩 조건문 활용하기 -> 30이상 : A, 20~29 : B, 20미만 : C
mpg$grade <- ifelse(mpg$total >= 30, "A",
ifelse(mpg$total >= 20, "B", "C"))
mpg
qplot(mpg$grade)
#문제1) ggplot2의 midwest 데이터를 데이터 프레임 형태로 불러온 다음 데이터의 특징을 파악하세요.
library(ggplot2)
?midwest
View(midwest)
source('~/R/Chapter5/challenge_five.R', encoding = 'UTF-8')
?midwest
View(midwest)
#문제3) total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
midwest$total_percent <- (midwest$asian / midwest$total) * 100
midwest$total_percent
#문제3) total, asian 변수를 이용해 '전체 인구 대비 아시아 인구 백분율' 파생변수를 만들고, 히스토그램을 만들어 도시들이 어떻게 분포하는지 살펴보세요.
midwest$asian_percent <- (midwest$asian / midwest$total) * 100
midwest$asian_percent
hist(midwest$asian_percent)
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$total_percent)
mean_asian_percent
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$total_percent)
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$total_percent)
midwest$asian_cf_mean <- ifelse(midwest$asian_cf_mean > mean(midwest$total_percent), "large", "small")
midwest$asian_cf_mean <- ifelse(midwest$asian_percent > mean(midwest$total_percent), "large", "small")
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$aian_percent)
midwest$asian_cf_mean <- ifelse(midwest$asian_percent > mean(midwest$total_percent), "large", "small")
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$aian_percent)
#문제4) 아시아 인구 백분율 전체 평균을 구하고, 평균을 초과하면 "large", 그 외에는 "small"을 부여하는 파생변수를 만들어 보세요.
mean(midwest$asian_percent)
midwest$asian_cf_mean <- ifelse(midwest$asian_percent > mean(midwest$total_percent), "large", "small")
#문제5)"large"와 "small"에 해당하는 지역이 얼마나 되는지 빈도표와 빈도 막대 그래프를 만들어 확인해 보세요.
table(midwest$asian_cf_mean)
qplot(midwest$asian_cf_mean)
