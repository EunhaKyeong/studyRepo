package com.tutorial01.tutorial.controller;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.tutorial01.tutorial.model.dto.PointDTO;

@Controller
public class MainController {
	//http://localhost:8080/
	@RequestMapping("/")
	public String main(Model model) {
		model.addAttribute("name", "홍길동");
		model.addAttribute("message", "홈페이지 방문을 환영합니다.");
		
		return "main";	///WEB-INF/views/main.jsp
	}
	//http://localhost:8080/gugu.do
	@RequestMapping("gugu.do")
	public String gugu() {
		return "test/gugu";
	}
	//http://localhost:8080/gogo_result.do
	@RequestMapping("gugu_result.do")
	//@RequestParam() : 폼데이터를 개별변수로 전달하는 방법
	public String guguResult(@RequestParam(defaultValue="3") int dan, Model model) {
		String result = "";
		for (int i=1; i<=9; i++) {
			result += dan + "x" + i + "=" + dan*i + "<br>";
		}
		model.addAttribute("result", result);
		return "test/gugu_result";
	}
	//http://localhost:8080/point.do
	@RequestMapping("point.do")
	public String point() {
		return "test/point";
	}
	//http://localhost:8080/point_result.do
		@RequestMapping("point_result.do")
		//@ModelAttribute : form 전송 데이터를 클래스 형태로 여러개의 데이터를 한번에 받아오는 방법.
		public String pointResult(@ModelAttribute PointDTO dto, Model model) {
			dto.setTotal(dto.getKor()+dto.getEng()+dto.getMath());
			dto.setAverage(dto.getTotal()/3.0);
			
			model.addAttribute("dto", dto);
			return "test/point_result";
		}
	
}
